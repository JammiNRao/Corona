ggplot() + theme_void()
ggplot() + theme_void() + annotate(geom_text("Label"))
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank()
ggplot(df, aes(x, y)) +
geom_blank() + labs(x="", y="")
ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", labels=NULL)
?scale_x_continuous
ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL)
ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL)
ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = text("This"))
ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = text("This"))
ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=5, label = "India Reported Data", size = 8 )
p8.india
p9.india<- ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=5,
label = "Reported Data from India", size = 8 )
p9.india
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
nrow=2, ncol=3)
p9.india <- ggplot(df, aes(x, y)) + ## just a blank chart for the label
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=5,
label = "Reported Data from India", size = 6 )
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
nrow=2, ncol=3)
p9.india <- ggplot(df, aes(x, y)) + ## just a blank chart for the label
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=5,
label = "Reported Data\n from India", size = 6 )
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
nrow=2, ncol=3)
?scale_y_continuous
p8.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
# mutate(MovAverageDoublingTime = ma(CasesDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = CasesToDate)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
scale_y_continuous(name="",limits = c(0, 100000))
p8.india
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10,
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = 0.2,
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = 0.4, label_y = 0.8
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = 0.4, label_y = 0.8,
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = c(0, 0.3,0.2,0.2,0.2) label_y = 0.95,
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(1.1,1),
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(1.2,1),
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(1.2,1,1),
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(0.8,1,1),
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 12, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(0.8,1,1),
nrow=2, ncol=3)
p9.india <- ggplot(df, aes(x, y)) + ## just a blank chart for the label
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=5,
label = "Reported Data\n from India as upto\n as.character(Date.Upto, format = "%d %b %Y")"),
size = 6 )
as.character(Date.Upto, format = "%d %b %Y")
p9.india <- ggplot(df, aes(x, y)) + ## just a blank chart for the label
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=5,
label = "Reported Data \n from India as upto \n 15 May 2020" ,
size = 6 )
p9.india
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 12, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(0.8,1,1),
nrow=2, ncol=3)
p9.india <- ggplot(df, aes(x, y)) + ## just a blank chart for the label
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=6,
label = "Reported Data \n from India as upto \n 15 May 2020" ,
size = 6 )
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 12, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(0.8,1,1),
nrow=2, ncol=3)
p8.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
# mutate(MovAverageDoublingTime = ma(CasesDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = CasesToDate)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
scale_y_continuous(name="",limits = c(0, 100000),
breaks = c(20000,40000,60000,80000),
labels = c("20k","40k","60k","80k"))
p8.india
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 12, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(0.8,1,1),
nrow=2, ncol=3)
knitr::opts_chunk$set(echo = FALSE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(cowplot)
library(forecast)
library(gridExtra)
data <- read.csv(url("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv"))
data$countriesAndTerritories <- gsub("United_States_of_America", "USA", data$countriesAndTerritories)
data$countriesAndTerritories <- gsub("United_Kingdom", "UK", data$countriesAndTerritories)
d <- data  %>%
mutate(ReportingDate = as.Date(as.character(dateRep), format = "%d/%m/%Y")) %>%
group_by(countriesAndTerritories) %>%
arrange(ReportingDate, .by_group = TRUE) %>%
mutate(CasesToDate = cumsum(cases),
DeathsToDate = cumsum(deaths)) %>%
#select(ReportingDate, countriesAndTerritories, cases, deaths,
# CasesToDate, DeathsToDate) %>%
mutate(CasesDoublingTime = log(2)/log(CasesToDate/lag(CasesToDate)),
DeathsDoublingTime = log(2)/log(DeathsToDate/lag(DeathsToDate)) ) %>%
ungroup() %>%
rename(Country = countriesAndTerritories,
CountryCode = countryterritoryCode,
Continent = continentExp
)
sickest <- d %>%
group_by(Country) %>%
summarise(CasesToDate = max(CasesToDate),
DeathsToDate = max(DeathsToDate),
DeathRate = round(100 * DeathsToDate/CasesToDate, 1)) %>%
arrange(desc(CasesToDate)) %>%
ungroup()
## To extract the most recet reporting date for the title in the charts
RepDate <- d %>%
group_by(Country) %>%
summarise(latest = last(ReportingDate))
Date.Upto <- filter(RepDate, Country == "UK")$latest  ## the most recent date for the UK
top16countries <- as.character(sickest$Country[1:16])
sickest$Country <- reorder(sickest$Country, sickest$CasesToDate, FUN = identity)
summary.text <- paste("Worldwide there have been \n",
format(sum(sickest$CasesToDate), big.mark= ","),
"reported cases and ",
format(sum(sickest$DeathsToDate), big.mark= ","),
"deaths. \nIndia has had", format( subset(sickest, Country == "India")[[1,2]], big.mark=","),
"cases and", subset(sickest, Country == "India")[[1,3]],"deaths")
p1 <- ggplot(data =sickest[2:25, ],
aes(x=Country, y = CasesToDate)) +
geom_point(stat="identity",position="identity", size=3.0, colour = "red") +
geom_bar(stat="identity", width = 0.1, fill = "blue") +
scale_x_discrete("") +
scale_y_continuous(breaks = c(0,25000,50000, 75000, 400000, 125000, 150000, 175000, 200000, 250000),
labels = c("0", "25k", "50k", "75k", "100k", "125k", "150k", "175k", "200k", "250k"),
name = "Cumulative tally of cases") +
coord_flip() +
annotate("text", x = 7, y = 150000, label = summary.text, size = 6) +
labs(title = "Fig 1. Covid19 across the world. \nThe top 25 countries by number of reported cases",
subtitle = paste("America, with", format(sickest[[1,2]], big.mark=","), "cases and", format(sickest[[1,3]], big.mark = ","), "deaths has been excluded." ),
caption = paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y") )
) +
theme(panel.border = element_rect(fill = NA, linetype = "solid"))
p1
p2 <- d %>% #p2 is cumulative cases time trend
filter(Country %in% top16countries & ReportingDate > as.Date("2020/03/15")) %>%
ggplot(aes(x = ReportingDate, y = CasesToDate,
group = Country)) +
geom_line(aes(colour = Country), size = 1.2) +
facet_wrap(.~Country, scales = "free") +
#scale_x_date(date_breaks = "4 weeks",date_labels = "%b\n %y") +
scale_x_date(breaks = as.Date(c("2020/03/15", "2020/04/15")),
labels = c("15\nMar", "15\nApr") ) +
labs(title = "How the number of cases grew over time",
subtitle = "Cumulative tally of cases of Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each country",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y")),
x = "", y = "Cumulative count of cases")+
theme(legend.position = "none",
axis.text.x = element_text(size = rel(0.7)))
p2
p3 <- d %>%  # p3 is cumulative deaths time trend
filter(Country %in% top16countries & ReportingDate > as.Date("2020/03/15")) %>%
ggplot(aes(x = ReportingDate, y = DeathsToDate,
group = Country)) +
geom_line(aes(colour = Country), size = 1.2) +
facet_wrap(.~Country, scales = "free") +
scale_x_date(breaks = as.Date(c("2020/03/15", "2020/04/15")),
labels = c("15Mar", "15Apr") ) +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each country",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y")),
x = "", y = "Cumulative count of deaths")+
theme(legend.position = "none")
p3
p4 <- d %>% filter(Country %in% top16countries &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageCases = ma(cases, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageCases,
group = Country)) +
geom_line(aes(colour = Country), size = 1.2) +
scale_x_date(breaks = as.Date(c("2020/03/15", "2020/04/15")),
labels = c("15Mar", "15Apr") ) +
facet_wrap(.~Country, scales = "free") +
labs(title = "The daily number of cases of Covid19",
subtitle  = "3-day moving average of the daily number of cases ",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y")),
x = "", y = "Daily Cases")+
theme(legend.position = "none")
p4
p5 <- d %>% filter(Country %in% top16countries &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageDeaths = ma(deaths, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageDeaths,
group = Country)) +
geom_line(aes(colour = Country), size = 1.2) +
scale_x_date(breaks = as.Date(c("2020/03/15", "2020/04/15")),
labels = c("15Mar", "15Apr") ) +
facet_wrap(.~Country, scales = "free") +
labs(title = "The daily number of deaths from Covid19",
subtitle  = "3-day moving average of the daily number of deaths ",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y")),
x = "", y = "Daily Cases")+
theme(legend.position = "none")
p5
p6 <- d %>% filter(Country %in% top16countries &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageDoublingTime = ma(CasesDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageDoublingTime,
group = Country)) +
geom_line(aes(colour = Country), size = 1.2) +
scale_x_date(breaks = as.Date(c("2020/03/15", "2020/04/15")),
labels = c("15Mar", "15Apr") ) +
facet_wrap(.~Country, scales = "free") +
labs(title = "Doubling time for Cumulative number of cases of Covid19",
subtitle  = "3-day moving average of the daily doubling time ",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y")),
x = "", y = "Doubling time in days")+
theme(legend.position = "none")
p6
fastest.growers <- d %>% filter(Country %in% top16countries &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(Growth.Rate = DeathsToDate/lag(DeathsToDate) -1) %>%
group_by(Country) %>%
summarise(Latest.Growth.Rate = last(Growth.Rate)) %>%
mutate(ToHighlight = ifelse(Country == "India", "yes", "No"))
fastest.growers$Country <- reorder(fastest.growers$Country,
fastest.growers$Latest.Growth.Rate, FUN = identity)
p.fastestgrowers <- ggplot(fastest.growers, aes(x=Country, y = Latest.Growth.Rate)) +
geom_point(stat="identity",position="identity", size=5.0, colour = "red") +
geom_col(aes(fill=ifelse(Country == "India", "A", "B")), width = 0.22) +
scale_fill_manual(values = c(A="#FFFF00", B = "#0080FF")) +
scale_x_discrete("") +
labs(title = "Latest 1-day growth rate in number of cases",
subtitle = "Top 16 countries by number of cases",
caption = paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar ", as.character(Date.Upto, format = "%d %b %Y") ) ) +
scale_y_continuous(breaks = c(0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.12),
labels = c("0", "1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "10%", "12%"),
name = "") +
theme(legend.position = "none") +
coord_flip()
p.fastestgrowers
p7 <- d %>% filter(Country %in% top16countries &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(DeathsMovAverageDoublingTime = ma(DeathsDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = DeathsMovAverageDoublingTime,
group = Country)) +
geom_line(aes(colour = Country), size = 1.2) +
scale_x_date(breaks = as.Date(c("2020/03/15", "2020/04/15")),
labels = c("15Mar", "15Apr") ) +
facet_wrap(.~Country, scales = "free") +
labs(title = "Doubling time for Cumulative deaths from Covid19",
subtitle  = "3-day moving average of the daily doubling time ",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y")),
x = "", y = "Doubling time in days")+
theme(legend.position = "none")
p7
## India secific charts using cowplot to provide the titles etc
# 1. Cases and deaths cumulative time charts
## cases
p4.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageCases = ma(cases, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageCases)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
labs(y="")
#p4.india
# ggsave(plot=p4.india,
#        file =paste0("IndiaCasesTrend", as.character(Date.Upto, format = "%d%m%Y"), ".png" ),
#        path = "CovidTrackerV2", width = 8, height = 6, units = "in")
## deaths
p5.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageDeaths = ma(deaths, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageDeaths)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
labs(y="")
#p5.india
# ggsave(plot=p5.india,
#        file =paste0("IndiaDeathsTrend", as.character(Date.Upto, format = "%d%m%Y"), ".png" ),
#        path = "CovidTrackerV2", width = 8, height = 6, units = "in")
# 2. Doubling tme for cases and deaths
##doubling time for cases
p6.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageDoublingTime = ma(CasesDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageDoublingTime)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
labs(y="")
#p6.india
# ggsave(plot=p6.india,
#        file =paste0("IndiaCasesDoublingTimeTrend", as.character(Date.Upto, format = "%d%m%Y"), ".png" ),
#        path = "CovidTrackerV2", width = 8, height = 6, units = "in")
## doubling time for deaths
p7.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/04/01") ) %>%
mutate(MovAverageDoublingTime = ma(DeathsDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageDoublingTime)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
labs(y="")
#p7.india
# ggsave(plot=p7.india,
#        file =paste0("IndiaDeathsDoublingTimeTrend", as.character(Date.Upto, format = "%d%m%Y"), ".png" ),
#        path = "CovidTrackerV2", width = 8, height = 6, units = "in")
p8.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
# mutate(MovAverageDoublingTime = ma(CasesDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = CasesToDate)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
scale_y_continuous(name="",limits = c(0, 100000),
breaks = c(20000,40000,60000,80000),
labels = c("20k","40k","60k","80k"))
#p8.india
chart.title <- paste("Reported Data", "\nfrom India as upto\n",
as.character(Date.Upto, format = "%d %b %Y"))
df <- data.frame(x = 1:10, y = 1:10) ## to create the text plo
p9.india <- ggplot(df, aes(x, y)) + ## just a blank chart for the label
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=6,
label = chart.title,
size = 6 )
#p9.india
IndiaPlot <- plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 12, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(0.8,1,1),
nrow=2, ncol=3)
IndiaPlot
setwd("C:/Users/Jammi/Google Drive/R files/DataProjects/Corona/Corona")
knitr::opts_chunk$set(echo = FALSE,
message = FALSE,
warning = FALSE
)
data <- read.csv(url("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv"))
data$countriesAndTerritories <- gsub("United_States_of_America", "USA", data$countriesAndTerritories)
data$countriesAndTerritories <- gsub("United_Kingdom", "UK", data$countriesAndTerritories)
d <- data  %>%
mutate(ReportingDate = as.Date(as.character(dateRep), format = "%d/%m/%Y")) %>%
group_by(countriesAndTerritories) %>%
arrange(ReportingDate, .by_group = TRUE) %>%
mutate(CasesToDate = cumsum(cases),
DeathsToDate = cumsum(deaths)) %>%
#select(ReportingDate, countriesAndTerritories, cases, deaths,
# CasesToDate, DeathsToDate) %>%
mutate(CasesDoublingTime = log(2)/log(CasesToDate/lag(CasesToDate)),
DeathsDoublingTime = log(2)/log(DeathsToDate/lag(DeathsToDate)) ) %>%
ungroup() %>%
rename(Country = countriesAndTerritories,
CountryCode = countryterritoryCode,
Continent = continentExp
)
sickest <- d %>%
group_by(Country) %>%
summarise(CasesToDate = max(CasesToDate),
DeathsToDate = max(DeathsToDate),
DeathRate = round(100 * DeathsToDate/CasesToDate, 1)) %>%
arrange(desc(CasesToDate)) %>%
ungroup()
## To extract the most recet reporting date for the title in the charts
RepDate <- d %>%
group_by(Country) %>%
summarise(latest = last(ReportingDate))
Date.Upto <- filter(RepDate, Country == "UK")$latest  ## the most recent date for the UK
top16countries <- as.character(sickest$Country[1:16])
Date.Upto
head(RepDate)
View(RepDate)
Date.Upto <- filter(RepDate, Country == "India")$latest  ## the most recent date for the UK
Date.Upto
