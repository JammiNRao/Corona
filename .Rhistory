2.1, 42.1,1.4, 27.9,69.5,
NA, 72.9, 36.1,
3.7,201.5,11.2, 92.5, NA)
StatesIndia <- data.frame(state.codes, state.name, state.population,stringsAsFactors = FALSE)
d.states <- inner_join(d.states, StatesIndia, by = c("StateCode" = "state.codes"))
View(d.states)
str(sickestState)
str(sickestState)
str(SickestState)
str(d.states)
SickestState <- d.states %>%
group_by(StateCode) %>%
arrange(Date, .by_group = TRUE) %>%
summarise(CasesToDate = max(CasesToDate),
DeathsToDate = max(DeathsToDate),
RecoveredToDate = last(RecoveriesToDate),
DeathRate = last(CFR),
State.Population = last(state.population)) %>%
arrange(desc(CasesToDate)) %>%
ungroup()
SickestState$StateCode <- reorder(SickestState$StateCode, SickestState$DeathRate, FUN = identity)
plot1 <- SickestState[1:12, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes(x=StateCode, y= DeathRate*100)) +
geom_point(stat="identity",position="identity", size=5.0, colour = "red") +
geom_col(width = 0.12, colour = "blue") +
coord_flip() +
scale_x_discrete("Top 10 States by No of infections") +
scale_y_continuous("%") +
labs(title = "Covid-19 Case fatality rate by State",
subtitle = "case fatality calculated as Deaths/(Deaths+Recovered)",
caption = paste("data source: https://t.co/lfRdu7epRj?amp=1,
© JayEnAar ", as.character(Date.Latest, format = "%d %b %Y") ) ) +
theme(axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(face= "bold", size = 12) )
plot1
str(SickestState)
inc <- SickestState$CasesToDate/SickestState$State.Population
inc
SickestState[1:17, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes(x=CasesToDate/State.Population, y= CasesToDate)) +
geom(point)
SickestState[1:17, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes(x=CasesToDate/State.Population, y= CasesToDate)) +
geom_point()
SickestState[1:17, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes( x= CasesToDate,y=CasesToDate/State.Population)) +
geom_point()
SickestState[1:17, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes( x= CasesToDate/State.Population, y = CFR )) +
geom_point()
SickestState[1:17, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes( x= CasesToDate/State.Population, y =DeathRate )) +
geom_point()
SickestState[1:17, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes( x= CasesToDate/State.Population, y =DeathRate*100 )) +
geom_point()
str(SickestState)
SickestState[1:17, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes( x= CasesToDate/State.Population,
y =DeathRate*100,
label = StateCode)) +
geom_point(colour = "dark red", size = 2.5) +
geom_text_repel(nudge_y = 0.5) +
scale_x_continuous("Cases per million population") +
scale_y_continuous("Case fatality rate - estimated") +
labs(title = "Indian States. Case fatality v Population incidence of Covid19",
subtitle = "Case Fatality defined as deaths/(deaths+recovered)",
caption = paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y") ) )
SickestState[1:17, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes( x= CasesToDate/State.Population,
y =DeathRate*100,
label = StateCode)) +
geom_point(colour = "dark red", size = 2.5) +
geom_text_repel(nudge_y = 0.5) +
scale_x_continuous("Cases per million population") +
scale_y_continuous("Case fatality rate - estimated") +
labs(title = "Indian States. Case fatality v Population incidence of Covid19",
subtitle = "Case Fatality defined as deaths/(deaths+recovered);
State populations are estimates",
caption = paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y") ) )
SickestState[1:17, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes( x= CasesToDate/State.Population,
y =DeathRate*100,
label = StateCode)) +
geom_point(colour = "dark red", size = 2.5) +
geom_text_repel(nudge_y = 0.5) +
scale_x_continuous("Cases per million population") +
scale_y_continuous("Case fatality rate - estimated") +
labs(title = "Indian States. Case fatality v Population incidence of Covid19",
subtitle = "Case Fatality defined as deaths/(deaths+recovered);
State populations are estimates",
caption = paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y") ) ) +
theme(axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(face= "bold", size = 12) )
SickestState[1:17, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes( x= CasesToDate/State.Population,
y =DeathRate*100,
label = StateCode)) +
geom_point(colour = "dark red", size = 2.5) +
geom_text_repel(nudge_y = 0.5) +
scale_x_continuous("Cases per million population") +
scale_y_continuous("Case fatality rate - estimated") +
labs(title = "Indian States. Case fatality v Population incidence of Covid19",
subtitle = "Case Fatality defined as deaths/(deaths+recovered); State populations are estimates",
caption = paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y") ) ) +
theme(axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(size = 12) )
SickestState[1:17, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes( x= CasesToDate/State.Population,
y =DeathRate*100,
label = StateCode)) +
geom_point(colour = "dark red", size = 2.5) +
geom_text_repel(nudge_y = 0.5) +
scale_x_continuous("Cases per million population") +
scale_y_continuous("Case fatality rate - estimated") +
labs(title = "Indian States. Case fatality v Population incidence of Covid19",
subtitle = "Case Fatality defined as deaths/(deaths+recovered); State populations are estimates",
caption = paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Latest, format = "%d %b %Y") ) ) +
theme(axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(size = 12) )
str(d)
str(d.states)
sickstates <- SickestState[1:12, ] %>%
filter(! StateCode %in% c("UN","TT"))
sickstates
sickstates <- SickestState[1:12, ] %>%
filter(! StateCode %in% c("UN","TT")) $ StateCode
sickstates$StateCode
relevel(sickstates$StateCode)
as.character(sickstates$StateCode)
d %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(.~Country, scales = "free") +
scale_x_date(breaks = as.Date(c("2020/03/15", "2020/04/15")),
labels = c("15/03", "15/04") ) +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each country",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of deaths")
str(d)
d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(.~Country, scales = "free") +
scale_x_date(breaks = as.Date(c("2020/03/15", "2020/04/15")),
labels = c("15/03", "15/04") ) +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each country",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of deaths")
sickstates <- SickestState[1:12, ] %>%
filter(! StateCode %in% c("UN","TT"))
sickstatescodes <- as.character(sickstates$StateCode)
d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(.~Country, scales = "free") +
scale_x_date(breaks = as.Date(c("2020/03/15", "2020/04/15")),
labels = c("15/03", "15/04") ) +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each country",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of deaths")
plot3 <- d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(. ~ StateCode, scales = "free") +
scale_x_date(breaks = as.Date(c("2020/03/15", "2020/04/15")),
labels = c("15/03", "15/04") ) +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each country",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of deaths")
d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(. ~ StateCode, scales = "free")
d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(. ~ StateCode, scales = "free") +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each country",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of deaths")
d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(. ~ StateCode, scales = "free") +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each country",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar & GorwayGlobal ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of cases")+
theme(legend.position = "none")
sickstates <- SickestState[1:14, ] %>%
filter(! StateCode %in% c("UN","TT"))
sickstatescodes <- as.character(sickstates$StateCode)
plot3 <- d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(. ~ StateCode, scales = "free") +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each country",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar & GorwayGlobal ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of cases")+
theme(legend.position = "none")
plot3
plot3 <- d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(. ~ StateCode, scales = "free") +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each country",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar & GorwayGlobal ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of cases")+
theme(legend.position = "none",
axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(face= "bold", size = 12) )
plot3
plot3 <- d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = Cases,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(. ~ StateCode, scales = "free") +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each State",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar & GorwayGlobal ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of cases")+
theme(legend.position = "none",
axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(face= "bold", size = 12) )
plot3
d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = DeathsToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(. ~ StateCode, scales = "free") +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each State",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar & GorwayGlobal ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of cases")+
theme(legend.position = "none",
axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(face= "bold", size = 12) )
library(tidyverse)
library(ggrepel)
library(reshape2)
d.states <- read.csv(url("https://t.co/lfRdu7epRj?amp=1")) %>%
melt(id = c(1:2)) %>%
dcast(formula = Date + variable ~ Status, value.var = "value") %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date)
colnames(d.states) <- c("Date", "StateCode","Cases", "Deaths", "Recovered")
state.codes <- unique(d.states$StateCode)
state.name  <- c("AllIndia", "Andaman and Nicobar", "Andhra Pradesh", "Arunachal Pradesh",
"Assam", "Bihar", "Chandigarh", "Chattisgarh", "Dadra and Nagar Haveli",
"Daman and Diu", "Delhi", "Goa", "Gujarat",
"Haryana", "Himachal Pradesh", "Jammu and Kashmir", "Jharkhand", "Karnataka",
"Kerala", "Lakshadweep", "Ladakh", "Madhya Pradesh", "Maharashtra",
"Manipur", "Meghalaya","Mizoram",
"Nagaland", "Odisha", "Puducherry", "Punjab", "Rajasthan",
"Sikkim", "Tamil Nadu", "Telangana",
"Tripura", "Uttar Pradesh", "Uttarakhand", "West Bengal", "UnAssigned")
state.population <- c(1250, 0.4, 51,1.4, 31.2, 105, 1.1, 25.9, 0.35, 0.25,17.0, 1.6, 61.5,
25.8, 6.9, 12.6, 33.5,62.1,
34.2,NA, NA,74.5,115.0,
2.9,3.1,1.2,
2.1, 42.1,1.4, 27.9,69.5,
NA, 72.9, 36.1,
3.7,201.5,11.2, 92.5, NA)
StatesIndia <- data.frame(state.codes, state.name, state.population,stringsAsFactors = FALSE)
d.states <- inner_join(d.states, StatesIndia, by = c("StateCode" = "state.codes"))
d.states <- d.states %>%
group_by(StateCode) %>%
arrange(Date, .by_group = TRUE) %>%
mutate(CasesToDate = cumsum(Cases),
DeathsToDate = cumsum(Deaths),
RecoveriesToDate = cumsum(Recovered),
CFR = DeathsToDate / (DeathsToDate + RecoveriesToDate)) %>%
ungroup()
SickestState <- d.states %>%
group_by(StateCode) %>%
arrange(Date, .by_group = TRUE) %>%
summarise(CasesToDate = max(CasesToDate),
DeathsToDate = max(DeathsToDate),
RecoveredToDate = last(RecoveriesToDate),
DeathRate = last(CFR),
State.Population = last(state.population)) %>%
arrange(desc(CasesToDate)) %>%
ungroup()
Date.Latest <- d.states[nrow(d.states),]$Date
SickestState$StateCode <- reorder(SickestState$StateCode, SickestState$DeathRate, FUN = identity)
plot1 <- SickestState[1:12, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes(x=StateCode, y= DeathRate*100)) +
geom_point(stat="identity",position="identity", size=5.0, colour = "red") +
geom_col(width = 0.12, colour = "blue") +
coord_flip() +
scale_x_discrete("Top 10 States by No of infections") +
scale_y_continuous("%") +
labs(title = "Covid-19 Case fatality rate by State",
subtitle = "case fatality calculated as Deaths/(Deaths+Recovered)",
caption = paste("data source: https://t.co/lfRdu7epRj?amp=1,
© JayEnAar ", as.character(Date.Latest, format = "%d %b %Y") ) ) +
theme(axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(face= "bold", size = 12) )
plot1
unallocated <- subset(SickestState, StateCode == "UN")$CasesToDate
SickestState$StateCode <- reorder(SickestState$StateCode, SickestState$CasesToDate, FUN = identity)
plot2 <- SickestState[1:12, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes(x=StateCode, y= CasesToDate)) +
geom_point(stat="identity",position="identity", size=5.0, colour = "red") +
geom_col(width = 0.12, colour = "blue") +
coord_flip() +
scale_x_discrete("top 10 States") +
scale_y_continuous("",breaks = c(1000, 10000, 20000, 30000,40000, 50000, 60000, 70000, 80000),
labels = c("1k", "10k", "20k", "30k", "40k", "50k", "60k", "70k", "80k")) +
labs(title = "Covid-19 Cumulative Number of cases by State",
subtitle = paste("excludes", unallocated, "cases that were not allocated to a State"),
caption = paste("data source: https://t.co/lfRdu7epRj?amp=1,
© JayEnAar & GorwayGlobal ",
as.character(Date.Latest, format = "%d %b %Y") ) ) +
theme(axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(face= "bold", size = 12) )
plot2
sickstates <- SickestState[1:14, ] %>%
filter(! StateCode %in% c("UN","TT"))
sickstatescodes <- as.character(sickstates$StateCode)
plot3 <- d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(. ~ StateCode, scales = "free") +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each State",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar & GorwayGlobal ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of cases")+
theme(legend.position = "none",
axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(face= "bold", size = 12) )
plot3
plot4 <- SickestState[1:17, ] %>%
filter(! StateCode %in% c("UN","TT")) %>%
ggplot(aes( x= CasesToDate/State.Population,
y =DeathRate*100,
label = StateCode)) +
geom_point(colour = "dark red", size = 2.5) +
geom_text_repel(nudge_y = 0.5) +
scale_x_continuous("Cases per million population") +
scale_y_continuous("Case fatality rate - estimated") +
labs(title = "Indian States. Case fatality v Population incidence of Covid19",
subtitle = "Case Fatality defined as deaths/(deaths+recovered); State populations are estimates",
caption = paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Latest, format = "%d %b %Y") ) ) +
theme(axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(size = 12) )
plot4
plot3
plot3 <- d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(. ~ StateCode, scales = "free") +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of deaths from Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each State",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar & GorwayGlobal ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of cases")+
theme(legend.position = "none",
axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(face= "bold", size = 12) )
plot3
plot3 <- d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(. ~ StateCode, scales = "free") +
labs(title = "How the number of deaths grew over time",
subtitle = "Cumulative tally of cases of Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each State",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar & GorwayGlobal ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of cases")+
theme(legend.position = "none",
axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(face= "bold", size = 12) )
plot3
plot3 <- d.states %>%
filter(StateCode %in% sickstatescodes) %>%
ggplot(aes(x = Date, y = CasesToDate,
group = StateCode)) +
geom_line(aes(colour = StateCode), size = 1.2) +
facet_wrap(. ~ StateCode, scales = "free") +
labs(title = "How the number of cases grew over time",
subtitle = "Cumulative tally of cases of Covid19, 16 March 2020 onwards
Caution:The Y-axis is not the same for each State",
caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
© JayEnAar & GorwayGlobal ", as.character(Date.Latest, format = "%d %b %Y")),
x = "", y = "Cumulative count of cases")+
theme(legend.position = "none",
axis.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 14),
plot.caption = element_text(face= "bold", size = 12) )
plot3
plot4
setwd("C:/Users/Jammi/Google Drive/R files/DataProjects/Corona/Corona")
