geom_line(colour = "red", size = 1.2) +
#geom_line(aes(y= MovAverageDeaths), colour = "blue", size = 1.3) +
scale_x_date(breaks = as.Date(c("2020/03/15", "2020/04/01", "2020/04/15", "2020/05/01")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay") ) +
labs(title = "India: daily cases ",
subtitle  = "3-day moving average",
# caption =paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
#                Â© JayEnAar ", as.character(Date.Upto, format = "%d %b %Y")),
x = "", y = "")+
theme(legend.position = "none")
p4.india
p4.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageCases = ma(cases, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageCases)) +
geom_line(colour = "red", size = 1.2) +
#geom_line(aes(y= MovAverageDeaths), colour = "blue", size = 1.3) +
scale_x_date(breaks = as.Date(c("2020/03/15", "2020/04/01", "2020/04/15", "2020/05/01")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay") )
p4.india
p4.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageCases = ma(cases, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageCases)) +
geom_line(colour = "red", size = 1.2) +
#geom_line(aes(y= MovAverageDeaths), colour = "blue", size = 1.3) +
scale_x_date(name = "", breaks = as.Date(c("2020/03/15", "2020/04/01", "2020/04/15", "2020/05/01")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay") )
p4.india
p4.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageCases = ma(cases, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageCases)) +
geom_line(colour = "red", size = 1.2) +
#geom_line(aes(y= MovAverageDeaths), colour = "blue", size = 1.3) +
scale_x_date(name = "", breaks = as.Date(c("2020/03/15", "2020/04/01", "2020/04/15", "2020/05/01")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay") ) +
labels(y="")
p4.india
p4.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageCases = ma(cases, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageCases)) +
geom_line(colour = "red", size = 1.2) +
#geom_line(aes(y= MovAverageDeaths), colour = "blue", size = 1.3) +
scale_x_date(name = "", breaks = as.Date(c("2020/03/15", "2020/04/01", "2020/04/15", "2020/05/01")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay") ) +
labs(y="")
p4.india
p4.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageCases = ma(cases, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageCases)) +
geom_line(colour = "red", size = 1.2) +
#geom_line(aes(y= MovAverageDeaths), colour = "blue", size = 1.3) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
labs(y="")
p4.india
p4.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageCases = ma(cases, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageCases)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
labs(y="")
p4.india
p5.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageDeaths = ma(deaths, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageDeaths)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
labs(y="")
p5.india
p6.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageDoublingTime = ma(CasesDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageDoublingTime)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
labs(y="")
p6.india
p7.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
mutate(MovAverageDoublingTime = ma(DeathsDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageDoublingTime)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
labs(y="")
p7.india
p7.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/04/01") ) %>%
mutate(MovAverageDoublingTime = ma(DeathsDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = MovAverageDoublingTime)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
labs(y="")
p7.india
grid.arrange(p4.india, p5.india, p6.india, p7.india)
View(d)
d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") )
p8.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
# mutate(MovAverageDoublingTime = ma(CasesDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = CasesToDate)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
labs(y="")
p8.india
?plot_grid
plot_grid(pr.india, p5.india, p6.india, p7.india, p8.india,
nrow=2, ncol=2)
plot_grid(p4.india, p5.india, p6.india, p7.india, p8.india,
nrow=2, ncol=2)
plot_grid(p4.india, p5.india, p6.india, p7.india, p8.india,
nrow=2, ncol=3)
plot_grid(p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c(),
nrow=2, ncol=3)
plot_grid(NULL, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c(),
nrow=2, ncol=3)
plot_grid(NULL, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("India's Covid-19 Officially reported data"),
nrow=2, ncol=3)
plot_grid(NULL, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("India's Covid-19 Officially reported data", "A", "B", "C","D","E"),
nrow=2, ncol=3)
df <- data.frame(x = 1:10, y = 1:10) ## to create the text plo
base <- ggplot(df, aes(x, y)) +
geom_blank() +
theme_bw()
base + annotation_custom(
grob = grid::roundrectGrob(),
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf
)
base <- ggplot(df, aes(x, y)) +
geom_blank() +
theme_bw()
base
base <- ggplot(df, aes(x, y)) +
geom_blank()
base
ggplot() + theme_void()
ggplot() + theme_void() + annotate(geom_text("Label"))
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_blank()
ggplot(df, aes(x, y)) +
geom_blank() + labs(x="", y="")
ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", labels=NULL)
?scale_x_continuous
ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL)
ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL)
ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = text("This"))
ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = text("This"))
ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=5, label = "India Reported Data", size = 8 )
p8.india
p9.india<- ggplot(df, aes(x, y)) +
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=5,
label = "Reported Data from India", size = 8 )
p9.india
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
nrow=2, ncol=3)
p9.india <- ggplot(df, aes(x, y)) + ## just a blank chart for the label
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=5,
label = "Reported Data from India", size = 6 )
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
nrow=2, ncol=3)
p9.india <- ggplot(df, aes(x, y)) + ## just a blank chart for the label
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=5,
label = "Reported Data\n from India", size = 6 )
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
nrow=2, ncol=3)
?scale_y_continuous
p8.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
# mutate(MovAverageDoublingTime = ma(CasesDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = CasesToDate)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
scale_y_continuous(name="",limits = c(0, 100000))
p8.india
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10,
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = 0.2,
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = 0.4, label_y = 0.8
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = 0.4, label_y = 0.8,
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = c(0, 0.3,0.2,0.2,0.2) label_y = 0.95,
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(1.1,1),
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(1.2,1),
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(1.2,1,1),
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 10, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(0.8,1,1),
nrow=2, ncol=3)
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 12, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(0.8,1,1),
nrow=2, ncol=3)
p9.india <- ggplot(df, aes(x, y)) + ## just a blank chart for the label
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=5,
label = "Reported Data\n from India as upto\n as.character(Date.Upto, format = "%d %b %Y")"),
size = 6 )
as.character(Date.Upto, format = "%d %b %Y")
p9.india <- ggplot(df, aes(x, y)) + ## just a blank chart for the label
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=5,
label = "Reported Data \n from India as upto \n 15 May 2020" ,
size = 6 )
p9.india
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 12, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(0.8,1,1),
nrow=2, ncol=3)
p9.india <- ggplot(df, aes(x, y)) + ## just a blank chart for the label
geom_blank() +
scale_x_continuous(name="", breaks = NULL, labels=NULL) +
scale_y_continuous(name="", breaks = NULL, labels=NULL) +
annotate(geom = "text", x=5, y=6,
label = "Reported Data \n from India as upto \n 15 May 2020" ,
size = 6 )
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 12, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(0.8,1,1),
nrow=2, ncol=3)
p8.india <- d %>% filter(Country == "India" &
ReportingDate > as.Date("2020/03/15") ) %>%
# mutate(MovAverageDoublingTime = ma(CasesDoublingTime, order = 3)) %>%
ggplot(aes(x = ReportingDate, y = CasesToDate)) +
geom_line(colour = "red", size = 1.2) +
scale_x_date(name = "",
breaks = as.Date(c("2020/03/15", "2020/04/01",
"2020/04/15", "2020/05/01", "2020/05/15")),
labels = c("15\nMar", "01\nApr", "15\nApr", "01\nMay", "15\nMay") ) +
scale_y_continuous(name="",limits = c(0, 100000),
breaks = c(20000,40000,60000,80000),
labels = c("20k","40k","60k","80k"))
p8.india
plot_grid(p9.india, p8.india, p4.india, p5.india, p6.india, p7.india,
labels = c("", "Cases so far", "Daily cases", "Daily deaths",
"Doubling time: cases","Doubling time:deaths"),
label_size = 12, label_x = c(0, 0.3,0.2,0.2,0.2), label_y = 0.95,
rel_widths = c(0.8,1,1),
nrow=2, ncol=3)
setwd("C:/Users/Jammi/Google Drive/R files/DataProjects/Corona")
Sys.Date()
Sys.Date(format = "%d %m %Y")
Sys.Date(format = "%b %m %Y")
as.character (Sys.Date(format = "%b %m %Y"))
class(Sys.Date())
as.character(Sys.Date(), format = "%b %m %Y")
as.character(Sys.Date(), format = "%d %m %Y")
as.character(Sys.Date(), format = "%d %b %Y")
setwd("C:/Users/Jammi/Google Drive/R files/DataProjects/Corona/Corona")
as.character(Sys.Date(), format = "%d %b %Y"))
as.character(Sys.Date(), format = "%d %b %Y")
getwd()
knitr::opts_chunk$set(echo = FALSE,
message = FALSE,
warning = FALSE
)
summary.text <- paste("Worldwide there have been \n",
"Cases:",format(sum(sickest$CasesToDate), big.mark= ","),
"\nDeaths:",format(sum(sickest$DeathsToDate), big.mark= ","),
"\nIndia has had", format( subset(sickest, Country == "India")[[1,2]], big.mark=","),"cases and \n", subset(sickest, Country == "India")[[1,3]],"deaths")
summary.text
p1 <- ggplot(data =sickest[2:25, ],
aes(x=Country, y = CasesToDate)) +
geom_point(stat="identity",position="identity", size=3.0, colour = "red") +
geom_bar(stat="identity", width = 0.1, fill = "blue") +
scale_x_discrete("") +
scale_y_continuous(breaks = c(0,25000,50000, 75000, 400000, 125000, 150000, 175000, 200000, 250000),
labels = c("0", "25k", "50k", "75k", "100k", "125k", "150k", "175k", "200k", "250k"),
name = "Cumulative tally of cases") +
coord_flip() +
annotate("text", x = 7, y = 170000, label = summary.text, size = 6) +
labs(title = "Fig 1. Covid19 across the world. \nThe top 25 countries by number of reported cases",
subtitle = paste("America, with", format(sickest[[1,2]], big.mark=","), "cases and", format(sickest[[1,3]], big.mark = ","), "deaths has been excluded." ),
caption = paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y") )
) +
theme(panel.border = element_rect(fill = NA, linetype = "solid"))
summary.text <- paste("Worldwide there have been \n",
"Cases:",format(sum(sickest$CasesToDate), big.mark= ","),
"\nDeaths:",format(sum(sickest$DeathsToDate), big.mark= ","),
"\nIndia has had", format( subset(sickest, Country == "India")[[1,2]], big.mark=","),"cases and \n", subset(sickest, Country == "India")[[1,3]],"deaths")
summary.text
library(tidyverse)
library(cowplot)
library(forecast)
library(gridExtra)
data <- read.csv(url("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv"))
data$countriesAndTerritories <- gsub("United_States_of_America", "USA", data$countriesAndTerritories)
data$countriesAndTerritories <- gsub("United_Kingdom", "UK", data$countriesAndTerritories)
d <- data  %>%
mutate(ReportingDate = as.Date(as.character(dateRep), format = "%d/%m/%Y")) %>%
group_by(countriesAndTerritories) %>%
arrange(ReportingDate, .by_group = TRUE) %>%
mutate(CasesToDate = cumsum(cases),
DeathsToDate = cumsum(deaths)) %>%
#select(ReportingDate, countriesAndTerritories, cases, deaths,
# CasesToDate, DeathsToDate) %>%
mutate(CasesDoublingTime = log(2)/log(CasesToDate/lag(CasesToDate)),
DeathsDoublingTime = log(2)/log(DeathsToDate/lag(DeathsToDate)) ) %>%
ungroup() %>%
rename(Country = countriesAndTerritories,
CountryCode = countryterritoryCode,
Continent = continentExp
)
sickest <- d %>%
group_by(Country) %>%
summarise(CasesToDate = max(CasesToDate),
DeathsToDate = max(DeathsToDate),
DeathRate = round(100 * DeathsToDate/CasesToDate, 1)) %>%
arrange(desc(CasesToDate)) %>%
ungroup()
## To extract the most recet reporting date for the title in the charts
RepDate <- d %>%
group_by(Country) %>%
summarise(latest = last(ReportingDate))
Date.Upto <- filter(RepDate, Country == "UK")$latest  ## the most recent date for the UK
top16countries <- as.character(sickest$Country[1:16])
data <- read.csv(url("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv"))
data$countriesAndTerritories <- gsub("United_States_of_America", "USA", data$countriesAndTerritories)
data$countriesAndTerritories <- gsub("United_Kingdom", "UK", data$countriesAndTerritories)
d <- data  %>%
mutate(ReportingDate = as.Date(as.character(dateRep), format = "%d/%m/%Y")) %>%
group_by(countriesAndTerritories) %>%
arrange(ReportingDate, .by_group = TRUE) %>%
mutate(CasesToDate = cumsum(cases),
DeathsToDate = cumsum(deaths)) %>%
#select(ReportingDate, countriesAndTerritories, cases, deaths,
# CasesToDate, DeathsToDate) %>%
mutate(CasesDoublingTime = log(2)/log(CasesToDate/lag(CasesToDate)),
DeathsDoublingTime = log(2)/log(DeathsToDate/lag(DeathsToDate)) ) %>%
ungroup() %>%
rename(Country = countriesAndTerritories,
CountryCode = countryterritoryCode,
Continent = continentExp
)
sickest <- d %>%
group_by(Country) %>%
summarise(CasesToDate = max(CasesToDate),
DeathsToDate = max(DeathsToDate),
DeathRate = round(100 * DeathsToDate/CasesToDate, 1)) %>%
arrange(desc(CasesToDate)) %>%
ungroup()
## To extract the most recet reporting date for the title in the charts
RepDate <- d %>%
group_by(Country) %>%
summarise(latest = last(ReportingDate))
Date.Upto <- filter(RepDate, Country == "UK")$latest  ## the most recent date for the UK
top16countries <- as.character(sickest$Country[1:16])
sickest$Country <- reorder(sickest$Country, sickest$CasesToDate, FUN = identity)
summary.text <- paste("Worldwide there have been \n",
"Cases:",format(sum(sickest$CasesToDate), big.mark= ","),
"\nDeaths:",format(sum(sickest$DeathsToDate), big.mark= ","),
"\nIndia has had", format( subset(sickest, Country == "India")[[1,2]], big.mark=","),"cases and \n", subset(sickest, Country == "India")[[1,3]],"deaths")
p1 <- ggplot(data =sickest[2:25, ],
aes(x=Country, y = CasesToDate)) +
geom_point(stat="identity",position="identity", size=3.0, colour = "red") +
geom_bar(stat="identity", width = 0.1, fill = "blue") +
scale_x_discrete("") +
scale_y_continuous(breaks = c(0,25000,50000, 75000, 400000, 125000, 150000, 175000, 200000, 250000),
labels = c("0", "25k", "50k", "75k", "100k", "125k", "150k", "175k", "200k", "250k"),
name = "Cumulative tally of cases") +
coord_flip() +
annotate("text", x = 7, y = 170000, label = summary.text, size = 6) +
labs(title = "Fig 1. Covid19 across the world. \nThe top 25 countries by number of reported cases",
subtitle = paste("America, with", format(sickest[[1,2]], big.mark=","), "cases and", format(sickest[[1,3]], big.mark = ","), "deaths has been excluded." ),
caption = paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y") )
) +
theme(panel.border = element_rect(fill = NA, linetype = "solid"))
p1
sickest$Country <- reorder(sickest$Country, sickest$CasesToDate, FUN = identity)
summary.text <- paste("Worldwide there have been \n",
"Cases:",format(sum(sickest$CasesToDate), big.mark= ","),
"\nDeaths:",format(sum(sickest$DeathsToDate), big.mark= ","),
"\nIndia has had", format( subset(sickest, Country == "India")[[1,2]], big.mark=","),"cases and \n", subset(sickest, Country == "India")[[1,3]],"deaths")
p1 <- ggplot(data =sickest[2:25, ],
aes(x=Country, y = CasesToDate)) +
geom_point(stat="identity",position="identity", size=3.0, colour = "red") +
geom_bar(stat="identity", width = 0.1, fill = "blue") +
scale_x_discrete("") +
scale_y_continuous(breaks = c(0,25000,50000, 75000, 400000, 125000, 150000, 175000, 200000, 250000),
labels = c("0", "25k", "50k", "75k", "100k", "125k", "150k", "175k", "200k", "250k"),
name = "Cumulative tally of cases") +
coord_flip() +
annotate("text", x = 7, y = 170000, label = summary.text, size = 6) +
labs(title = "Fig 1. Covid19 across the world. \nThe top 25 countries by number of reported cases",
subtitle = paste("America, with", format(sickest[[1,2]], big.mark=","), "cases and", format(sickest[[1,3]], big.mark = ","), "deaths has been excluded." ),
caption = paste("data source: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv,
(c) JayEnAar ", as.character(Date.Upto, format = "%d %b %Y") )
) +
theme(panel.border = element_rect(fill = NA, linetype = "solid"))
p1
setwd("C:/Users/Jammi/Google Drive/R files/DataProjects/Corona/Corona")
